;;; Automatically generated on Thu Aug 15 00:50:25 2013
;;; Invoked by dapliu@dapliu-mac using 24.3.1
(setq-default kill-ring '(#("fun
" 0 3 (fontified t) 3 4 (fontified t))))
(setq-default session-file-alist '(("~/Documents/test/test.c" 112 105 1 nil nil 112 (overwrite-mode)) ("~/Documents/cisco/GIT_projects/emacs_config/init-ctags.el" 460 460 1 nil nil 460 (overwrite-mode)) ("~/Documents/cisco/GIT_projects/emacs_config/elpa/ctags-20110911.1204/ctags.el" 2079 2003 1 nil nil 2019 (overwrite-mode)) ("~/Documents/cisco/GIT_projects/emacs_config/init.el" 5453 3246 1 nil nil 5453 (overwrite-mode)) ("~/Documents/cisco/GIT_projects/emacs_config/init-company.el" 1 31 1 nil nil 1 (overwrite-mode)) ("~/Documents/cisco/GIT_projects/emacs_config/init-helm.el" 1682 nil 1 nil nil 1117 (overwrite-mode)) ("~/Documents/cisco/GIT_projects/emacs_config/init-local.el" 656 656 1 nil nil 656 (overwrite-mode)) ("~/Documents/cisco/GIT_projects/emacs_config/init-gui-frames.el" 678 604 1 nil nil 636 (overwrite-mode)) ("~/Documents/cisco/asr1k/FEATURE and TICKETS and SUPPORT/Feature/Auto Tunnel/feature_develop" 4806 5614 1 nil nil 5680 (overwrite-mode)) ("~/Documents/cisco/GIT_projects/emacs_config/init-cc-mode.el" 3430 1 1 nil nil 3430 (overwrite-mode)) ("~/Documents/cisco/GIT_projects/emacs_config/init-misc.el" 7782 1261 1 nil nil 7782 (overwrite-mode)) ("~/.emacs.d/elpa/org-20130812/org-loaddefs.el" 79756 nil 1 nil nil 79756 (overwrite-mode))))
(setq-default file-name-history '("/Users/dapliu/.emacs.d/init-ctags.el" "~/Documents/test/TAGS" "/Users/dapliu/Documents/test/test.c" "/Applications/Emacs.app/Contents/Resources/lisp/progmodes/etags.el.gz" "/Users/dapliu/.emacs.d/init-gtags.el" "/Users/dapliu/.emacs.d/init.el" "/Users/dapliu/.emacs.d/init-company.el" "/Users/dapliu/.emacs.d/elpa/gtags-3.3/gtags.el" "~/Documents/cisco/GIT_projects/emacs_config/elpa/ctags-20110911.1204/ctags.el" "~/Documents/test/tags" "~/Documents/test/cscope.files" "~/Documents/test/cscope.out" "/Users/dapliu/.emacs.d/init-hippie-expand.el" "~/.emacs.d/snippets/cc-mode/ife" "~/.emacs.d/init.el" "~/Documents/test/test.h" "test.h" "/Users/dapliu/.emacs.d/init-helm.el" "~/.emacs.d/init-helm.el" "~/Desktop/test/test"))
(setq-default anything-c-source-complex-command-history '((name . "Complex Command History") (candidates lambda nil (mapcar \.\.\. command-history)) (type . sexp)))
(setq-default anything-c-source-eshell-history '((name . "Eshell history") (init lambda nil (let \.\.\. \.\.\. \.\.\.) (remove-hook \.\.\. \.\.\.)) (candidates-in-buffer) (keymap keymap (27 keymap \.\.\.) keymap (23 . anything-yank-text-at-point) (24 keymap \.\.\.) (help keymap \.\.\.) (8 keymap \.\.\.) (f1 keymap \.\.\.) (3 keymap \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\.) (67108987 . anything-enlarge-window) (67108989 . anything-narrow-window) (20 . anything-toggle-resplit-window) (18 . undefined) (11 . anything-delete-minibuffer-contents) (67108896 . anything-toggle-visible-mark) (C-M-up . anything-scroll-other-window-down) (C-M-down . anything-scroll-other-window) (M-prior . anything-scroll-other-window-down) (M-next . anything-scroll-other-window) (15 . anything-next-source) (5 . anything-select-2nd-action-or-end-of-line) (26 . anything-execute-persistent-action) (90 . anything-select-with-digit-shortcut) (89 . anything-select-with-digit-shortcut) (88 . anything-select-with-digit-shortcut) (87 . anything-select-with-digit-shortcut) (86 . anything-select-with-digit-shortcut) (85 . anything-select-with-digit-shortcut) (84 . anything-select-with-digit-shortcut) (83 . anything-select-with-digit-shortcut) (82 . anything-select-with-digit-shortcut) (81 . anything-select-with-digit-shortcut) (80 . anything-select-with-digit-shortcut) (79 . anything-select-with-digit-shortcut) (78 . anything-select-with-digit-shortcut) (77 . anything-select-with-digit-shortcut) (76 . anything-select-with-digit-shortcut) (75 . anything-select-with-digit-shortcut) (74 . anything-select-with-digit-shortcut) (73 . anything-select-with-digit-shortcut) (72 . anything-select-with-digit-shortcut) (71 . anything-select-with-digit-shortcut) (70 . anything-select-with-digit-shortcut) (69 . anything-select-with-digit-shortcut) (68 . anything-select-with-digit-shortcut) (67 . anything-select-with-digit-shortcut) (66 . anything-select-with-digit-shortcut) (65 . anything-select-with-digit-shortcut) (67108921 . anything-select-with-digit-shortcut) (67108920 . anything-select-with-digit-shortcut) (67108919 . anything-select-with-digit-shortcut) (67108918 . anything-select-with-digit-shortcut) (67108917 . anything-select-with-digit-shortcut) (67108916 . anything-select-with-digit-shortcut) (67108915 . anything-select-with-digit-shortcut) (67108914 . anything-select-with-digit-shortcut) (67108913 . anything-select-with-digit-shortcut) (left . anything-previous-source) (right . anything-next-source) (22 . anything-next-page) (16 . anything-previous-line) (14 . anything-next-line) (menu-bar keymap \.\.\. \.\.\.) (10 . anything-select-3rd-action) (13 . anything-exit-minibuffer) (7 . anything-keyboard-quit) (C-tab . file-cache-minibuffer-complete) (9 . anything-select-action) (XF86Back . previous-history-element) (up . anything-previous-line) (prior . anything-previous-page) (XF86Forward . next-history-element) (down . anything-next-line) (next . anything-next-page) (27 keymap \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\.)) (filtered-candidate-transformer lambda (candidates sources) (reverse candidates)) (candidate-number-limit . 9999) (action lambda (candidate) (eshell-kill-input) (insert candidate))))
(setq-default anything-c-source-extended-command-history '((name . "Emacs Commands History") (candidates lambda nil (anything-fast-remove-dups extended-command-history :test \.\.\.)) (type . command)))
(setq-default anything-c-source-file-name-history '((name . "File Name History") (candidates . file-name-history) (match anything-c-match-on-basename) (type . file)))
(setq-default anything-c-source-global-mark-ring '((name . "global-mark-ring") (candidates . anything-c-source-global-mark-ring-candidates) (action ("Goto line" lambda \.\.\. \.\.\.)) (persistent-action lambda (candidate) (let \.\.\. \.\.\. \.\.\. \.\.\.)) (persistent-help . "Show this line")))
(setq-default anything-c-source-kill-ring '((name . "Kill Ring") (init lambda nil (anything-attrset \.\.\. last-command)) (candidates . anything-c-kill-ring-candidates) (filtered-candidate-transformer anything-c-kill-ring-transformer) (action . anything-c-kill-ring-action) (keymap keymap (27 keymap \.\.\. \.\.\.) keymap (23 . anything-yank-text-at-point) (24 keymap \.\.\.) (help keymap \.\.\.) (8 keymap \.\.\.) (f1 keymap \.\.\.) (3 keymap \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\.) (67108987 . anything-enlarge-window) (67108989 . anything-narrow-window) (20 . anything-toggle-resplit-window) (18 . undefined) (11 . anything-delete-minibuffer-contents) (67108896 . anything-toggle-visible-mark) (C-M-up . anything-scroll-other-window-down) (C-M-down . anything-scroll-other-window) (M-prior . anything-scroll-other-window-down) (M-next . anything-scroll-other-window) (15 . anything-next-source) (5 . anything-select-2nd-action-or-end-of-line) (26 . anything-execute-persistent-action) (90 . anything-select-with-digit-shortcut) (89 . anything-select-with-digit-shortcut) (88 . anything-select-with-digit-shortcut) (87 . anything-select-with-digit-shortcut) (86 . anything-select-with-digit-shortcut) (85 . anything-select-with-digit-shortcut) (84 . anything-select-with-digit-shortcut) (83 . anything-select-with-digit-shortcut) (82 . anything-select-with-digit-shortcut) (81 . anything-select-with-digit-shortcut) (80 . anything-select-with-digit-shortcut) (79 . anything-select-with-digit-shortcut) (78 . anything-select-with-digit-shortcut) (77 . anything-select-with-digit-shortcut) (76 . anything-select-with-digit-shortcut) (75 . anything-select-with-digit-shortcut) (74 . anything-select-with-digit-shortcut) (73 . anything-select-with-digit-shortcut) (72 . anything-select-with-digit-shortcut) (71 . anything-select-with-digit-shortcut) (70 . anything-select-with-digit-shortcut) (69 . anything-select-with-digit-shortcut) (68 . anything-select-with-digit-shortcut) (67 . anything-select-with-digit-shortcut) (66 . anything-select-with-digit-shortcut) (65 . anything-select-with-digit-shortcut) (67108921 . anything-select-with-digit-shortcut) (67108920 . anything-select-with-digit-shortcut) (67108919 . anything-select-with-digit-shortcut) (67108918 . anything-select-with-digit-shortcut) (67108917 . anything-select-with-digit-shortcut) (67108916 . anything-select-with-digit-shortcut) (67108915 . anything-select-with-digit-shortcut) (67108914 . anything-select-with-digit-shortcut) (67108913 . anything-select-with-digit-shortcut) (left . anything-previous-source) (right . anything-next-source) (22 . anything-next-page) (16 . anything-previous-line) (14 . anything-next-line) (menu-bar keymap \.\.\. \.\.\.) (10 . anything-select-3rd-action) (13 . anything-exit-minibuffer) (7 . anything-keyboard-quit) (C-tab . file-cache-minibuffer-complete) (9 . anything-select-action) (XF86Back . previous-history-element) (up . anything-previous-line) (prior . anything-previous-page) (XF86Forward . next-history-element) (down . anything-next-line) (next . anything-next-page) (27 keymap \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\.)) (last-command) (migemo) (multiline)))
(setq-default anything-c-source-mark-ring '((name . "mark-ring") (init lambda nil (setq anything-mark-ring-cache \.\.\.)) (candidates lambda nil (anything-aif anything-mark-ring-cache it)) (action ("Goto line" lambda \.\.\. \.\.\.)) (persistent-action lambda (candidate) (anything-goto-line \.\.\.) (anything-match-line-color-current-line)) (persistent-help . "Show this line")))
(setq-default anything-c-source-minibuffer-history '((name . "Minibuffer History") (header-name lambda (name) (format "%s (%s)" name minibuffer-history-variable)) (candidates lambda nil (let \.\.\. \.\.\.)) (migemo) (action lambda (candidate) (delete-minibuffer-contents) (insert candidate))))
(setq-default buffer-name-history '("init-ctags.el" "test.c" "*helm-mode-ctags-create-tags-table*" "*etags-select*" "*Ctags*" "TAGS" "etags.el.gz" "init.el" "init-gtags.el" "gtags.el" "init-company.el" "ctags.el" "*Messages*" "*YASnippet tables*" "tags" "init-hippie-expand.el" "ife" "test.h" "init-helm.el" "*Ibuffer*" "test" "*Help*" "README.md"))
(setq-default command-history '((kill-buffer "init-ctags.el") (find-file "/Users/dapliu/.emacs.d/init-ctags.el") (describe-key "\256" 1 nil) (find-tag "func") (find-file "/Users/dapliu/Documents/test/test.c") (etags-select-find-tag) (describe-key "\252" 1 nil) (etags-select-next-tag) (where-is (quote etags-select-find-tag) nil) (describe-key "" 1 nil) (switch-to-buffer "test.c") (kill-buffer "*helm-mode-ctags-create-tags-table*") (kill-buffer "*etags-select*") (kill-buffer "*Ctags*") (kill-buffer "TAGS") (etags-select-find-tag-at-point) (etags-select-mode) (kill-buffer "etags.el.gz") (kill-buffer "init.el") (kill-buffer "init-gtags.el") (find-file "/Users/dapliu/.emacs.d/init-gtags.el") (find-file "/Users/dapliu/.emacs.d/init.el") (helm-gtags-mode (quote toggle))))
(setq-default find-tag-history '("func"))
(setq-default helm-c-source-complex-command-history '((name . "Complex Command History") (candidates lambda nil (mapcar \.\.\. command-history)) (type . sexp)))
(setq-default helm-c-source-ff-file-name-history '((name . "File name history") (init lambda nil (when helm-ff-file-name-history-use-recentf \.\.\. \.\.\.)) (candidates lambda nil (if helm-ff-file-name-history-use-recentf recentf-list file-name-history)) (persistent-action . ignore) (filtered-candidate-transformer . helm-file-name-history-transformer) (action ("Find file" lambda \.\.\. \.\.\. \.\.\.) ("Find file in helm" lambda \.\.\. \.\.\.))))
(setq-default helm-c-source-file-name-history '((name . "File Name History") (candidates . file-name-history) (type . file)))
(setq-default helm-ff-history '("/Users/dapliu/Documents/test/" "/Users/dapliu/.emacs.d/snippets/cc-mode/" "/Users/dapliu/.emacs.d/" "/"))
(setq-default helm-grep-history '("test"))
(setq-default helm-gtags-completing-history '("func" "main"))
(setq-default helm-source-complex-command-history '((name . "Complex Command History") (candidates lambda nil (mapcar \.\.\. command-history)) (type . sexp)))
(setq-default helm-source-ff-file-name-history '((name . "File name history") (init lambda nil (when helm-ff-file-name-history-use-recentf \.\.\. \.\.\.)) (candidates lambda nil (if helm-ff-file-name-history-use-recentf recentf-list file-name-history)) (persistent-action . ignore) (filtered-candidate-transformer . helm-file-name-history-transformer) (action ("Find file" lambda \.\.\. \.\.\. \.\.\.) ("Find file in helm" lambda \.\.\. \.\.\.))))
(setq-default helm-source-file-name-history '((name . "File Name History") (candidates . file-name-history) (type . file)))
(setq-default helm-source-minibuffer-history '((name . "Minibuffer History") (header-name lambda (name) (format "%s (%s)" name minibuffer-history-variable)) (candidates lambda nil (let \.\.\. \.\.\.)) (migemo) (multiline) (action lambda (candidate) (delete-minibuffer-contents) (insert candidate))))
(setq-default ido-buffer-history '("init-ctags.el" "test.c" "*helm-mode-ctags-create-tags-table*" "*etags-select*" "*Ctags*" "TAGS" "etags.el.gz" "init.el" "init-gtags.el" "gtags.el" "init-company.el" "ctags.el" #("init-ctags.el" 0 13 (face ido-virtual)) "*Messages*" "*YASnippet tables*" "tags" "init-hippie-expand.el" "ife" #("init.el" 0 7 (face ido-virtual)) "test.h" nil "init-helm.el" "*Ibuffer*" "test"))
(setq-default ido-file-history '("init-ctags.el" "test.c" "init-gtags.el" "init.el" "init-company.el" "gtags.el" "tags" "." "cscope.files" "cscope.out" "init-hippie-expand.el" nil "init-helm.el" "test" "ife" "init-local.el" "init-gui-frames.el" "init-ido.el" "NPI IOS XE AppNav and WAAS 5.1 (Phoenix) - Boxborough class-20121115 2008-1.arf" "feature_develop" "NPI-AppNav-Feature-v5.pptx" "init-locales.el" "init-cc-mode.el" "init-misc.el"))
(setq-default minibuffer-history '("func" "/Users/dapliu/Documents/test/" "etags-select-find-tag" "etags-select-next-tag" "etags-" "etags" "etags-select-find-tag-at-point" "etags-select-mode" "helm-gtags-mode" "gtags-mode" "uncomment-region" "ctags-create-or-update-tags-table" "comment-region" "ctags-" "ctags-command" "ctags-search" "ctags-create-tags-table" "yas-describe-tables" "yas/next-field" "yas-expand" "global-company-mode" "company-mode" "company-select-mouse" "company-gtags"))
(setq-default occur-collect-regexp-history '("\\1"))
(setq-default query-replace-history '("/auto/crdc-asr1k-fwd-dev-2/dapliu/sha-bsabu-edit6__ws__dapliu__cent_dev_eft_binos-0812_10__binos" "/nobackup/dapliu/new_branch_ultra_build/binos"))
(setq-default smex-history '(etags-select-find-tag-at-point etags-select-find-tag etags-select-mode helm-gtags-mode gtags-mode uncomment-region comment-region))
(setq-default table-capture-columns-history '(""))
(setq-default table-capture-justify-history '("left"))
(setq-default table-capture-min-cell-width-history '("5"))
(setq-default table-cell-height-history '("1"))
(setq-default table-cell-span-direction-history '("right"))
(setq-default table-cell-split-contents-to-history '("split"))
(setq-default table-cell-split-orientation-history '("horizontally"))
(setq-default table-cell-width-history '("5"))
(setq-default table-col-delim-regexp-history '(""))
(setq-default table-columns-history '("3"))
(setq-default table-insert-row-column-history '("row"))
(setq-default table-justify-history '("center"))
(setq-default table-row-delim-regexp-history '(""))
(setq-default table-rows-history '("3"))
(setq-default table-sequence-count-history '("0"))
(setq-default table-sequence-increment-history '("1"))
(setq-default table-sequence-interval-history '("1"))
(setq-default table-sequence-justify-history '("left"))
(setq-default table-sequence-string-history '("0"))
(setq-default table-source-caption-history '("Table"))
(setq-default table-source-language-history '("html"))
(setq-default table-target-history '("cell"))
