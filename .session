;;; Automatically generated on Mon Jun  9 01:47:50 2014
;;; Invoked by dapliu@DAPLIU-M-Q08F.CISCO.COM using 24.3.1
(setq-default kill-ring '(#("on Linux" 0 8 (fontified t face font-lock-comment-face))))
(setq-default session-file-alist '(("~/Documents/cisco/GIT_projects/emacs_config/init-local.el" 6540 6388 1 nil nil 6540 (overwrite-mode)) ("~/Desktop/test.org" 627 481 1 nil nil 632 (overwrite-mode)) ("~/Documents/cisco/GIT_projects/emacs_config/init.el" 5263 5453 1 nil nil 8452 (overwrite-mode)) ("~/Documents/cisco/GIT_projects/emacs_config/init-org.el" 632 5110 1 nil nil 5524 (overwrite-mode)) ("~/.emacs-bmk-bmenu-state.el" 1 nil 1 nil nil 1 (overwrite-mode)) ("~/Documents/cisco/GIT_projects/emacs_config/elpa/org-20140602/org-loaddefs.el" 86898 nil 1 nil nil 86898 (overwrite-mode)) ("~/Desktop/mask_len_log" 1115820 1115875 1 nil nil nil (overwrite-mode)) ("~/Documents/cisco/GIT_projects/emacs_config/elpa/org-20140602/org-autoloads.el" 27164 nil 1 nil nil 27164 (overwrite-mode)) ("~/Desktop/RG_AR" 537 78 1 nil nil 516 (overwrite-mode)) ("~/Documents/Linux/BOOK/OS_Kernel/source/linux-3.10.5/arch/x86/kernel/entry_32.S" 11892 11797 1 nil nil 11797 (overwrite-mode)) ("~/Desktop/tmpfile1" 29 1 1 nil nil 32 (overwrite-mode)) ("~/Desktop/tmpfile" 1543492 1543503 1 nil nil 361 (overwrite-mode)) ("~/Desktop/pmi" 5465 8097 1 nil nil 8231 (overwrite-mode)) ("~/Documents/cisco/GIT_projects/emacs_config/bookmarks" 512 nil 1 nil nil 513 (overwrite-mode)) ("~/Documents/Linux/BOOK/OS_Kernel/source/linux-3.10.5/Documentation/x86/x86_64/mm.txt" 344 204 1 nil nil 344 (overwrite-mode)) ("~/Documents/cisco/asr1k/FEATURE and TICKETS and SUPPORT/Feature/Auto Tunnel/feature_develop" 116634 117130 1 nil nil 116634 (overwrite-mode)) ("~/Desktop/task" 661 2909 1 nil nil 2927 (overwrite-mode)) ("~/Documents/Linux/BOOK/OS_Kernel/source/linux-3.10.5/arch/x86/vdso/vdso32/sysenter.S" 1443 1498 1 nil nil 1495 (overwrite-mode)) ("~/Documents/Linux/BOOK/OS_Kernel/source/linux-3.10.5/arch/x86/vdso/vdso32/vdso32.lds.S" 832 832 1 nil nil 833 (overwrite-mode)) ("~/Documents/Linux/BOOK/OS_Kernel/source/linux-3.10.5/arch/x86/ia32/ia32entry.S" 4682 2810 1 nil nil 2810 (overwrite-mode)) ("~/Downloads/Bootdisk-HOWTO.txt" 1 35015 1 nil nil 610 (overwrite-mode)) ("~/Documents/test/test.c" 312 310 1 nil nil 312 (overwrite-mode)) ("~/Documents/test.c" 107 2 1 nil nil 116 (overwrite-mode)) ("~/Documents/cisco/GIT_projects/emacs_config/init-ctags.el" 428 460 1 nil nil 460 (overwrite-mode)) ("~/Documents/Linux/BOOK/OS_Kernel/source/linux-3.10.5/arch/x86/vdso/vdsox32.lds.S" 374 374 1 nil nil 374 (overwrite-mode)) ("~/Documents/Linux/BOOK/OS_Kernel/source/linux-3.10.5/arch/x86/vdso/vdso32.S" 284 202 1 nil nil 284 (overwrite-mode)) ("~/Documents/Linux/BOOK/OS_Kernel/source/linux-3.10.5/arch/x86/um/stub_64.S" 948 689 1 nil nil 948 (overwrite-mode)) ("~/Documents/Linux/BOOK/OS_Kernel/source/linux-3.10.5/arch/ia64/kernel/entry.S" 45573 45573 1 nil nil 40822 (overwrite-mode)) ("~/Documents/Linux/BOOK/OS_Kernel/source/linux-3.10.5/arch/x86/include/asm/pgtable.h" 9972 9972 1 nil nil nil (overwrite-mode)) ("~/Desktop/UT.txt" 460 1744 1 nil nil 1744 (overwrite-mode)) ("~/Desktop/UT.rtf" 56366 1 1 nil nil 56366 (overwrite-mode)) ("~/Desktop/fast_failover" 4903 613 1 nil nil 5020 (overwrite-mode)) ("~/Documents/cisco/asr1k/FEATURE and TICKETS and SUPPORT/Feature/Auto Tunnel/cent_scaling" 3919 3917 1 nil nil 3919 (overwrite-mode)) ("~/Desktop/dmvpn_p3_route_add" 315 1 1 nil nil 315 (overwrite-mode)) ("~/Desktop/cent_scaling" 5723 3682 1 nil nil 3682 (overwrite-mode)) ("~/Desktop/cent_dmvpn_p2_test" 58473 1 1 nil nil 58473 (overwrite-mode)) ("~/Documents/cisco/asr1k/FEATURE and TICKETS and SUPPORT/tickets/CSCui41732 TOS byte not copied to GRE header when using IPoMPLSoGRE /CSCui41732" 49105 48055 1 nil nil 49313 (overwrite-mode)) ("~/Desktop/#cent_scaling#" 94 1 1 nil nil 1 (overwrite-mode)) ("~/Desktop/mgrenatt" 4936 4936 1 nil nil 686 (overwrite-mode)) ("~/Desktop/mgre_transport_mode" 17536 33 1 nil nil 17528 (overwrite-mode)) ("~/Desktop/mgre_tunnel_mode" 33969 16837 1 nil nil 83 (overwrite-mode)) ("~/Desktop/isakmp2" 56710 40899 1 nil nil 33309 (overwrite-mode)) ("~/Desktop/isakmp1" 9088 9088 1 nil nil 9088 (overwrite-mode)) ("~/Desktop/meeting" 1 452 1 nil nil 1 (overwrite-mode)) ("~/Documents/cisco/GIT_projects/emacs_config/init-ido.el" 359 325 1 nil nil 358 (overwrite-mode)) ("~/Documents/cisco/GIT_projects/emacs_config/ede-projects.el" 86 nil 1 nil nil 86 (overwrite-mode)) ("~/Documents/cisco/GIT_projects/emacs_config/elpa/ctags-20110911.1204/ctags.el" 2079 2003 1 nil nil 2019 (overwrite-mode)) ("~/Documents/cisco/GIT_projects/emacs_config/init-company.el" 1 31 1 nil nil 1 (overwrite-mode)) ("~/Documents/cisco/GIT_projects/emacs_config/init-helm.el" 1682 nil 1 nil nil 1117 (overwrite-mode)) ("~/Documents/cisco/GIT_projects/emacs_config/init-gui-frames.el" 678 604 1 nil nil 636 (overwrite-mode)) ("~/Documents/cisco/GIT_projects/emacs_config/init-cc-mode.el" 3430 1 1 nil nil 3430 (overwrite-mode)) ("~/Documents/cisco/GIT_projects/emacs_config/init-misc.el" 7782 1261 1 nil nil 7782 (overwrite-mode)) ("~/.emacs.d/elpa/org-20130812/org-loaddefs.el" 79756 nil 1 nil nil 79756 (overwrite-mode))))
(setq-default file-name-history '("/Users/dapliu/.emacs.d/init-local.el" "/Users/dapliu/Desktop/test.org" "/Users/dapliu/Desktop/test.sh" "/opt/local/var/macports/logs/_opt_local_var_macports_sources_rsync.macports.org_release_tarballs_ports_gnome_gnome-themes-standard/gnome-themes-standard/main.log" "/" "/Users/dapliu/.emacs.d/init-org.el" "/Users/dapliu/.emacs.d/init-emacs-w3m.el" "/Users/dapliu/.emacs.d/init.el" "/Users/dapliu/.emacs.d/init-locales.el" "/Users/dapliu/.emacs-bmk-bmenu-state.el" "~/Documents/cisco/GIT_projects/emacs_config/init.el" "/Users/dapliu/.emacs.d/site-lisp/geared/smart-tab.el" "/Users/dapliu/.emacs.d/init-hippie-expand.el" "~/diary" "~/.emacs.d/elpa/org-20140602/org-autoloads.el" "~/.emacs.d/elpa/org-20140602/org-loaddefs.el" "~/Documents/Linux/BOOK/OS_Kernel/source/linux-3.10.5/arch/x86/include/asm/bitops.h" "~/Documents/Linux/BOOK/OS_Kernel/source/linux-3.10.5/include/asm-generic/bitops/atomic.h" "/Users/dapliu/Documents/Linux/BOOK/OS_Kernel/source/linux-3.10.5/" "/Users/dapliu/Desktop/mask_len_log" "~/Documents/Linux/BOOK/OS_Kernel/source/linux-3.10.5/include/linux/mm.h" "~/Documents/Linux/BOOK/OS_Kernel/source/linux-3.10.5/mm/rmap.c" "~/Documents/Linux/BOOK/OS_Kernel/source/linux-3.10.5/arch/x86/include/asm/page_64.h" "~/Documents/Linux/BOOK/OS_Kernel/source/linux-3.10.5/arch/x86/include/asm/page_32.h" "~/Documents/Linux/BOOK/OS_Kernel/source/linux-3.10.5/include/asm-generic/page.h"))
(setq-default Info-isearch-initial-history '(("/Users/dapliu/.emacs.d/elpa/org-20140602/org" "Internal links" 132457) ("/Users/dapliu/.emacs.d/elpa/org-20140602/org" "Link format" 129490) ("/Users/dapliu/.emacs.d/elpa/org-20140602/org" "Hyperlinks" 128361) ("/Users/dapliu/.emacs.d/elpa/org-20140602/org" "Top" 1871) ("dir" "Top" 937)))
(setq-default anything-c-source-complex-command-history '((name . "Complex Command History") (candidates lambda nil (mapcar \.\.\. command-history)) (type . sexp)))
(setq-default anything-c-source-eshell-history '((name . "Eshell history") (init lambda nil (let \.\.\. \.\.\. \.\.\.) (remove-hook \.\.\. \.\.\.)) (candidates-in-buffer) (keymap keymap (27 keymap \.\.\.) keymap (23 . anything-yank-text-at-point) (24 keymap \.\.\.) (help keymap \.\.\.) (8 keymap \.\.\.) (f1 keymap \.\.\.) (3 keymap \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\.) (67108987 . anything-enlarge-window) (67108989 . anything-narrow-window) (20 . anything-toggle-resplit-window) (18 . undefined) (11 . anything-delete-minibuffer-contents) (67108896 . anything-toggle-visible-mark) (C-M-up . anything-scroll-other-window-down) (C-M-down . anything-scroll-other-window) (M-prior . anything-scroll-other-window-down) (M-next . anything-scroll-other-window) (15 . anything-next-source) (5 . anything-select-2nd-action-or-end-of-line) (26 . anything-execute-persistent-action) (90 . anything-select-with-digit-shortcut) (89 . anything-select-with-digit-shortcut) (88 . anything-select-with-digit-shortcut) (87 . anything-select-with-digit-shortcut) (86 . anything-select-with-digit-shortcut) (85 . anything-select-with-digit-shortcut) (84 . anything-select-with-digit-shortcut) (83 . anything-select-with-digit-shortcut) (82 . anything-select-with-digit-shortcut) (81 . anything-select-with-digit-shortcut) (80 . anything-select-with-digit-shortcut) (79 . anything-select-with-digit-shortcut) (78 . anything-select-with-digit-shortcut) (77 . anything-select-with-digit-shortcut) (76 . anything-select-with-digit-shortcut) (75 . anything-select-with-digit-shortcut) (74 . anything-select-with-digit-shortcut) (73 . anything-select-with-digit-shortcut) (72 . anything-select-with-digit-shortcut) (71 . anything-select-with-digit-shortcut) (70 . anything-select-with-digit-shortcut) (69 . anything-select-with-digit-shortcut) (68 . anything-select-with-digit-shortcut) (67 . anything-select-with-digit-shortcut) (66 . anything-select-with-digit-shortcut) (65 . anything-select-with-digit-shortcut) (67108921 . anything-select-with-digit-shortcut) (67108920 . anything-select-with-digit-shortcut) (67108919 . anything-select-with-digit-shortcut) (67108918 . anything-select-with-digit-shortcut) (67108917 . anything-select-with-digit-shortcut) (67108916 . anything-select-with-digit-shortcut) (67108915 . anything-select-with-digit-shortcut) (67108914 . anything-select-with-digit-shortcut) (67108913 . anything-select-with-digit-shortcut) (left . anything-previous-source) (right . anything-next-source) (22 . anything-next-page) (16 . anything-previous-line) (14 . anything-next-line) (menu-bar keymap \.\.\. \.\.\.) (10 . anything-select-3rd-action) (13 . anything-exit-minibuffer) (7 . anything-keyboard-quit) (C-tab . file-cache-minibuffer-complete) (9 . anything-select-action) (XF86Back . previous-history-element) (up . anything-previous-line) (prior . anything-previous-page) (XF86Forward . next-history-element) (down . anything-next-line) (next . anything-next-page) (27 keymap \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\.)) (filtered-candidate-transformer lambda (candidates sources) (reverse candidates)) (candidate-number-limit . 9999) (action lambda (candidate) (eshell-kill-input) (insert candidate))))
(setq-default anything-c-source-extended-command-history '((name . "Emacs Commands History") (candidates lambda nil (anything-fast-remove-dups extended-command-history :test \.\.\.)) (type . command)))
(setq-default anything-c-source-file-name-history '((name . "File Name History") (candidates . file-name-history) (match anything-c-match-on-basename) (type . file)))
(setq-default anything-c-source-global-mark-ring '((name . "global-mark-ring") (candidates . anything-c-source-global-mark-ring-candidates) (action ("Goto line" lambda \.\.\. \.\.\.)) (persistent-action lambda (candidate) (let \.\.\. \.\.\. \.\.\. \.\.\.)) (persistent-help . "Show this line")))
(setq-default anything-c-source-kill-ring '((name . "Kill Ring") (init lambda nil (anything-attrset \.\.\. last-command)) (candidates . anything-c-kill-ring-candidates) (filtered-candidate-transformer anything-c-kill-ring-transformer) (action . anything-c-kill-ring-action) (keymap keymap (27 keymap \.\.\. \.\.\.) keymap (23 . anything-yank-text-at-point) (24 keymap \.\.\.) (help keymap \.\.\.) (8 keymap \.\.\.) (f1 keymap \.\.\.) (3 keymap \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\.) (67108987 . anything-enlarge-window) (67108989 . anything-narrow-window) (20 . anything-toggle-resplit-window) (18 . undefined) (11 . anything-delete-minibuffer-contents) (67108896 . anything-toggle-visible-mark) (C-M-up . anything-scroll-other-window-down) (C-M-down . anything-scroll-other-window) (M-prior . anything-scroll-other-window-down) (M-next . anything-scroll-other-window) (15 . anything-next-source) (5 . anything-select-2nd-action-or-end-of-line) (26 . anything-execute-persistent-action) (90 . anything-select-with-digit-shortcut) (89 . anything-select-with-digit-shortcut) (88 . anything-select-with-digit-shortcut) (87 . anything-select-with-digit-shortcut) (86 . anything-select-with-digit-shortcut) (85 . anything-select-with-digit-shortcut) (84 . anything-select-with-digit-shortcut) (83 . anything-select-with-digit-shortcut) (82 . anything-select-with-digit-shortcut) (81 . anything-select-with-digit-shortcut) (80 . anything-select-with-digit-shortcut) (79 . anything-select-with-digit-shortcut) (78 . anything-select-with-digit-shortcut) (77 . anything-select-with-digit-shortcut) (76 . anything-select-with-digit-shortcut) (75 . anything-select-with-digit-shortcut) (74 . anything-select-with-digit-shortcut) (73 . anything-select-with-digit-shortcut) (72 . anything-select-with-digit-shortcut) (71 . anything-select-with-digit-shortcut) (70 . anything-select-with-digit-shortcut) (69 . anything-select-with-digit-shortcut) (68 . anything-select-with-digit-shortcut) (67 . anything-select-with-digit-shortcut) (66 . anything-select-with-digit-shortcut) (65 . anything-select-with-digit-shortcut) (67108921 . anything-select-with-digit-shortcut) (67108920 . anything-select-with-digit-shortcut) (67108919 . anything-select-with-digit-shortcut) (67108918 . anything-select-with-digit-shortcut) (67108917 . anything-select-with-digit-shortcut) (67108916 . anything-select-with-digit-shortcut) (67108915 . anything-select-with-digit-shortcut) (67108914 . anything-select-with-digit-shortcut) (67108913 . anything-select-with-digit-shortcut) (left . anything-previous-source) (right . anything-next-source) (22 . anything-next-page) (16 . anything-previous-line) (14 . anything-next-line) (menu-bar keymap \.\.\. \.\.\.) (10 . anything-select-3rd-action) (13 . anything-exit-minibuffer) (7 . anything-keyboard-quit) (C-tab . file-cache-minibuffer-complete) (9 . anything-select-action) (XF86Back . previous-history-element) (up . anything-previous-line) (prior . anything-previous-page) (XF86Forward . next-history-element) (down . anything-next-line) (next . anything-next-page) (27 keymap \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\.)) (last-command) (migemo) (multiline)))
(setq-default anything-c-source-mark-ring '((name . "mark-ring") (init lambda nil (setq anything-mark-ring-cache \.\.\.)) (candidates lambda nil (anything-aif anything-mark-ring-cache it)) (action ("Goto line" lambda \.\.\. \.\.\.)) (persistent-action lambda (candidate) (anything-goto-line \.\.\.) (anything-match-line-color-current-line)) (persistent-help . "Show this line")))
(setq-default anything-c-source-minibuffer-history '((name . "Minibuffer History") (header-name lambda (name) (format "%s (%s)" name minibuffer-history-variable)) (candidates lambda nil (let \.\.\. \.\.\.)) (migemo) (action lambda (candidate) (delete-minibuffer-contents) (insert candidate))))
(setq-default bookmark-history '("pmi" "*scratch*<2>" "*scratch*"))
(setq-default buffer-name-history '("*Warnings*" "*w3m*" "test.sh" "main.log" "/" "init-org.el" "init-emacs-w3m.el" "test.org" "init.el" "init-locales.el" ".emacs-bmk-bmenu-state.el" "*w3m*<3>" "*w3m*<2>" "init-local.el" "*Packages*" "*Help*" "TUTORIAL" "smart-tab.el" "init-hippie-expand.el" "*Org ASCII Export*" "*scratch*" "mask_len_log" "*Ibuffer*" "atomic.h" "*Messages*" "linux-3.10.5" "*cscope*"))
(setq-default command-history '((find-file "/Users/dapliu/.emacs.d/init-local.el") (find-file "/Users/dapliu/Desktop/test.org") (describe-variable (quote org-file-apps)) (describe-key-briefly "" nil 1) (describe-variable (quote org-file-apps-defaults-macosx)) (kill-buffer "*Warnings*") (kill-buffer "*w3m*") (w3m-form-input-textarea-mode nil) (describe-variable (quote org-agenda-bulk-mark-char)) (kill-buffer "test.sh") (find-file "/Users/dapliu/Desktop/test.sh") (kill-buffer "main.log") (find-file "/opt/local/var/macports/logs/_opt_local_var_macports_sources_rsync.macports.org_release_tarballs_ports_gnome_gnome-themes-standard/gnome-themes-standard/main.log") (kill-buffer "/") (find-file "/") (describe-variable (quote browse-url-browser-function)) (kill-buffer "init-org.el") (describe-variable (quote browse-url-generic-program)) (find-file "/Users/dapliu/.emacs.d/init-org.el") (kill-buffer "init-emacs-w3m.el") (find-file "/Users/dapliu/.emacs.d/init-emacs-w3m.el") (switch-to-buffer "test.org") (kill-buffer "init.el") (find-file "/Users/dapliu/.emacs.d/init.el")))
(setq-default face-name-history '("hi-blue" "hi-green"))
(setq-default find-tag-history '("func" nil))
(setq-default grep-history '("grep -nH -e MCP_SEC1"))
(setq-default helm-c-source-complex-command-history '((name . "Complex Command History") (candidates lambda nil (mapcar \.\.\. command-history)) (type . sexp)))
(setq-default helm-c-source-ff-file-name-history '((name . "File name history") (init lambda nil (when helm-ff-file-name-history-use-recentf \.\.\. \.\.\.)) (candidates lambda nil (if helm-ff-file-name-history-use-recentf recentf-list file-name-history)) (persistent-action . ignore) (filtered-candidate-transformer . helm-file-name-history-transformer) (action ("Find file" lambda \.\.\. \.\.\. \.\.\.) ("Find file in helm" lambda \.\.\. \.\.\.))))
(setq-default helm-c-source-file-name-history '((name . "File Name History") (candidates . file-name-history) (type . file)))
(setq-default helm-ff-history '("/Users/dapliu/Desktop/" "/Users/dapliu/Documents/Linux/BOOK/OS_Kernel/source/linux-3.10.5/" "/Users/dapliu/.emacs.d/" "/Users/dapliu/Documents/Linux/BOOK/C_system/C Language/glibc/glibc-2.13/" "/Users/dapliu/Documents/Linux/BOOK/OS_Kernel/source/linux-3.10.5/arch/x86/vdso/" "/Users/dapliu/Documents/Linux/BOOK/OS_Kernel/source/linux-3.10.5/arch/x86/vdso/vdso32/" "/Users/dapliu/" "/Users/dapliu/Documents/test/" "/Users/dapliu/Documents/" "/Users/dapliu/Documents/Linux/BOOK/OS_Kernel/source/linux-3.10.5/sound/" "/" "/Users/dapliu/.emacs.d/snippets/cc-mode/"))
(setq-default helm-file-name-history '("futex_compat.c" "futex.c" "futex.h" "linux-3.10.5" "fork.c" "lowlevellock.h" "pthread_join.c" "glibc-2.13" "fast_failover" "pthread.h" "descr.h" "db_info.c" "hp-timing.h" "dl-fptr.h" "atomic.h" "libc-symbols.h" "gettextP.h" "tls.h" "bus.c" "core.c" "pci-dma.c" "device.c" "seq_device.c"))
(setq-default helm-grep-history '("test"))
(setq-default helm-gtags-completing-history '("func" "main"))
(setq-default helm-source-complex-command-history '((name . "Complex Command History") (candidates lambda nil (mapcar \.\.\. command-history)) (type . sexp)))
(setq-default helm-source-ff-file-name-history '((name . "File name history") (init lambda nil (when helm-ff-file-name-history-use-recentf \.\.\. \.\.\.)) (candidates lambda nil (if helm-ff-file-name-history-use-recentf recentf-list file-name-history)) (persistent-action . ignore) (filtered-candidate-transformer . helm-file-name-history-transformer) (action ("Find file" lambda \.\.\. \.\.\. \.\.\.) ("Find file in helm" lambda \.\.\. \.\.\.))))
(setq-default helm-source-file-name-history '((name . "File Name History") (candidates . file-name-history) (type . file)))
(setq-default helm-source-global-mark-ring '((name . "global-mark-ring") (candidates . helm-global-mark-ring-get-candidates) (action ("Goto line" lambda \.\.\. \.\.\.)) (persistent-action lambda (candidate) (let \.\.\. \.\.\. \.\.\. \.\.\.)) (persistent-help . "Show this line")))
(setq-default helm-source-kill-ring '((name . "Kill Ring") (init lambda nil (helm-attrset \.\.\. last-command)) (candidates . helm-kill-ring-candidates) (filtered-candidate-transformer helm-kill-ring-transformer) (action ("Yank" . helm-kill-ring-action) ("Delete" lambda \.\.\. \.\.\.)) (keymap keymap (27 keymap \.\.\. \.\.\.) keymap (C-M-left . backward-sexp) (C-M-right . forward-sexp) (44 keymap \.\.\.) (menu-bar keymap \.\.\.) (help keymap \.\.\.) (f1 keymap \.\.\.) (8 keymap \.\.\. \.\.\. \.\.\. \.\.\.) (20 . helm-toggle-resplit-and-swap-windows) (C-tab . undefined) (67108897 . helm-toggle-suspend-update) (3 keymap \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\.) (67108987 . helm-enlarge-window) (67108989 . helm-narrow-window) (19 . undefined) (18 . undefined) (23 . helm-yank-text-at-point) (24 keymap \.\.\. \.\.\. \.\.\.) (11 . helm-delete-minibuffer-contents) (67108896 . helm-toggle-visible-mark) (C-M-up . helm-scroll-other-window-down) (C-M-down . helm-scroll-other-window) (M-prior . helm-scroll-other-window-down) (M-next . helm-scroll-other-window) (12 . helm-recenter-top-bottom-other-window) (15 . helm-next-source) (10 . helm-select-3rd-action) (5 . helm-select-2nd-action-or-end-of-line) (26 . helm-execute-persistent-action) (9 . helm-select-action) (13 . helm-exit-minibuffer) (left . helm-previous-source) (right . helm-next-source) (7 . helm-keyboard-quit) (22 . helm-next-page) (27 keymap \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\.) (next . helm-next-page) (prior . helm-previous-page) (16 . helm-previous-line) (14 . helm-next-line) (up . helm-previous-line) (down . helm-next-line) keymap (C-M-left . backward-sexp) (C-M-right . forward-sexp) (menu-bar keymap \.\.\.) (10 . exit-minibuffer) (13 . exit-minibuffer) (7 . abort-recursive-edit) (C-tab . file-cache-minibuffer-complete) (9 . self-insert-command) (XF86Back . previous-history-element) (up . previous-history-element) (prior . previous-history-element) (XF86Forward . next-history-element) (down . next-history-element) (next . next-history-element) (27 keymap \.\.\. \.\.\. \.\.\. \.\.\. \.\.\.)) (last-command) (migemo) (multiline)))
(setq-default helm-source-mark-ring '((name . "mark-ring") (candidates . helm-mark-ring-get-candidates) (action ("Goto line" lambda \.\.\. \.\.\.)) (persistent-action lambda (candidate) (helm-goto-line \.\.\.) (helm-match-line-color-current-line)) (persistent-help . "Show this line")))
(setq-default helm-source-minibuffer-history '((name . "Minibuffer History") (header-name lambda (name) (format "%s (%s)" name minibuffer-history-variable)) (candidates lambda nil (let \.\.\. \.\.\.)) (migemo) (multiline) (action lambda (candidate) (delete-minibuffer-contents) (insert candidate))))
(setq-default hi-lock-face-history '("hi-yellow" "hi-pink" "hi-green" "hi-blue" "hi-black-b" "hi-blue-b" "hi-red-b" "hi-green-b" "hi-black-hb"))
(setq-default hi-lock-regexp-history '("extra_fib_data" "chosen 8" "chosen 24" "133" "156" "626" "cpp_if_handle=2" "aaa" "MCP_SEC1"))
(setq-default ido-buffer-history '("*Warnings*" "*w3m*" "test.sh" "main.log" "/" "init-org.el" "init-emacs-w3m.el" "test.org" "init.el" "init-locales.el" ".emacs-bmk-bmenu-state.el" "*w3m*<3>" "*w3m*<2>" "init-local.el" "*Packages*" "*Help*" "TUTORIAL" "smart-tab.el" "init-hippie-expand.el" "*Org ASCII Export*" "*scratch*" "mask_len_log" "*Ibuffer*" "atomic.h" "*Messages*" "linux-3.10.5" "*cscope*"))
(setq-default ido-file-history '("init-local.el" "test.org" "test.sh" "main.log" "init-org.el" "init-emacs-w3m.el" "init.el" "init-locales.el" ".emacs-bmk-bmenu-state.el" "CSCuo61928.rtf" "smart-tab.el" "init-hippie-expand.el" "mask_len_log" "." "vdso32-setup.c" "cpp_cp_log_upper" "cpp_cp_log_lower" "cpp_cp_log_201405141744" "cpp_cp_CSCuo61928" "cpp_cp_F0-0_CSCuo61928_debug.log" "RG_AR" "sysenter.S" "mmap.c" "180021210-dapliu.xlsx" "entry_32.S"))
(setq-default minibuffer-history '("org-file-apps" "org-file-apps-defaults-macosx" "w3m-form-input-textarea-mode" "org-agenda-bulk-mark-char" "ulk" "/Users/dapliu/Documents/Linux/BOOK/OS_Kernel/ULK.pdf::5" "/Users/dapliu/Documents/Linux/BOOK/OS_Kernel/ULK.pdf" "browse-url-browser-function" "browse-url-generic-program" "sea" "browse-url-browser-display" "comment-region" "delete-region" "ULK" "browse-url" "link" "http://stackoverflow.com/questions/4506249/how-to-make-emacs-org-mode-open-links-to-sites-in-google-chrome" "browse-url-text-emacs-args" "w3m-command" "list-packages"))
(setq-default occur-collect-regexp-history '("\\1"))
(setq-default org-insert-link-history '("/Users/dapliu/Documents/Linux/BOOK/OS_Kernel/ULK.pdf#page=4" "/Users/dapliu/Documents/Linux/BOOK/OS_Kernel/ULK.pdf" "http://wwwin-sea.cisco.com/sffile.pl?q=ipv4_tunnel.c&b=xe313_throttle#284" "docview:/Users/dapliu/Documents/Linux/BOOK/OS_Kernel/ULK.pdf" "http://stackoverflow.com/questions/4506249/how-to-make-emacs-org-mode-open-links-to-sites-in-google-chrome" "file:/Users/dapliu/Documents/Linux/BOOK/OS_Kernel/ULK.pdf" "file+sys:/Users/dapliu/Documents/Linux/BOOK/OS_Kernel/ULK.pdf" "file:CSCuo61928/CSCuo61928.rtf"))
(setq-default org-read-date-history '("   "))
(setq-default query-replace-history '("" "
" "\\\\$" "[^[:space:]]*$" "[0-9]*:"))
(setq-default regexp-history '("extra_fib_data" "chosen 8" "chosen 24" "133" "156" "626" "cpp_if_handle=2" "aaa" "MCP_SEC1"))
(setq-default serial-name-history '("/dev/ttys0"))
(setq-default serial-speed-history '("9600" "1200" "2400" "4800" "14400" "19200" "28800" "38400" "57600" "115200"))
(setq-default smex-history '(comment-region delete-region browse-url list-packages uncomment-region hippie-expand semantic-mode))
(setq-default table-capture-columns-history '(""))
(setq-default table-capture-justify-history '("left"))
(setq-default table-capture-min-cell-width-history '("5"))
(setq-default table-cell-height-history '("1"))
(setq-default table-cell-span-direction-history '("right"))
(setq-default table-cell-split-contents-to-history '("split"))
(setq-default table-cell-split-orientation-history '("horizontally"))
(setq-default table-cell-width-history '("5"))
(setq-default table-col-delim-regexp-history '(""))
(setq-default table-columns-history '("3"))
(setq-default table-insert-row-column-history '("row"))
(setq-default table-justify-history '("center"))
(setq-default table-row-delim-regexp-history '(""))
(setq-default table-rows-history '("3"))
(setq-default table-sequence-count-history '("0"))
(setq-default table-sequence-increment-history '("1"))
(setq-default table-sequence-interval-history '("1"))
(setq-default table-sequence-justify-history '("left"))
(setq-default table-sequence-string-history '("0"))
(setq-default table-source-caption-history '("Table"))
(setq-default table-source-language-history '("html"))
(setq-default table-target-history '("cell"))
(setq-default w3m-input-url-history '("http://stackoverflow.com/questions/4506249/how-to-make-emacs-org-mode-open-links-to-sites-in-google-chrome"))
